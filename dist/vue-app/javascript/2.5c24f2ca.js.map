{"version":3,"sources":["webpack:///./src/vue-app/components/board.vue?51b7","webpack:///./src/vue-app/components/board.vue?9a19","webpack:///./src/vue-app/components/board.vue?fac0","webpack:///./src/vue-app/components/board.vue","webpack:///./src/vue-app/components/board.vue?ecd9","webpack:///src/vue-app/components/board.vue","webpack:///./src/vue-app/components/board.vue?5e9f"],"names":["content","__esModule","default","module","i","locals","exports","add","___CSS_LOADER_EXPORT___","push","name","props","data","game","board","observer","created","mounted","window","unmounted","watch","fen","methods","possibleMoves","SQUARES","toColor","onMoved","turnColor","movable","color","loadPosition","free","orientation","setState","console","onResize","history","component","_c","this","_self","ref","staticClass"],"mappings":"4EAGA,IAAIA,EAAU,EAAQ,IACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,iBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,SAG/BE,EADH,EAAQ,GAAkEL,SACnE,WAAYF,GAAS,EAAM,K,gCCT5C,O,gCCAA,kBAEIQ,EAFJ,MAE8B,IAA4B,GAE1DA,EAAwBC,KAAK,CAACN,EAAOC,EAAI,gIAAiI,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8CAA8C,MAAQ,GAAG,SAAW,4EAA4E,eAAiB,CAAC,onGAAmnG,WAAa,MAEx9G,a,6CCNf,I,oCCAmM,ECkCnM,CACAM,aAEAC,cAEAC,UACA,CACAC,UACAC,WACAC,gBAIAC,UACA,sBACA,oBAGAC,UAEA,4CAIAC,gDAGA,gBAEA,qBAIAC,YACAD,oDAGAE,OACAC,gBACA,WACA,sBAIAC,SAEAC,gBACA,WAKA,OAJAC,sBACA,+CACA,kCAEA,GAGAC,UACA,8CAGAC,UACA,gBACA,8BACA,gBACAL,oBACAM,yBACAC,SACAC,wBAKA,yEAKAC,eACA,yBACA,yCACAT,oBACAM,yBACAC,SACAC,qBACAE,SAGAC,sBAGA,gBACAJ,2CAIAK,YACAC,eACA,wBAGAC,WACA,wBAGAC,UACA,8B,eClIIC,EAAY,YACd,GHTW,WAA+C,OAAOC,EAA5BC,KAAYC,MAAMF,IAAa,MAAM,CAACG,IAAI,QAAQC,YAAY,YAE/E,IGUpB,EACA,KACA,KACA,MAIa,UAAAL,E","file":"javascript/2.5c24f2ca.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=style&index=0&id=22c9e52e&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b3913c46\", content, true, {});","export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=style&index=0&id=22c9e52e&prod&lang=css&\"","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.board {\\n\\twidth:100%;\\n\\theight: 100%;\\n\\tpadding-top:100%; /* 1:1 aspect */\\n}\\n.cg-wrap {\\n\\tborder-radius: 3px;\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/vue-app/components/board.vue\"],\"names\":[],\"mappings\":\";AAkJA;CACA,UAAA;CACA,YAAA;CACA,gBAAA,EAAA,eAAA;AACA;AAEA;CACA,kBAAA;AACA\",\"sourcesContent\":[\"<template>\\n\\n\\t\\t<div ref=\\\"board\\\" class=\\\"board\\\">\\n\\n\\t\\t</div>\\n\\n</template>\\n\\n<style>\\n\\n\\t.board {\\n\\t\\twidth:100%;\\n\\t\\theight: 100%;\\n\\t\\tpadding-top:100%; /* 1:1 aspect */\\n\\t}\\n\\n\\t.cg-wrap {\\n\\t\\tborder-radius: 3px;\\n\\t}\\n\\n</style>\\n\\n<script>\\n\\n\\timport {chessboard} from 'vue-chessboard';\\n\\timport {Chessground} from 'chessground';\\n\\t//import 'vue-chessboard/dist/vue-chessboard.css';\\n\\n\\timport 'chessground/assets/chessground.base.css';\\n\\timport 'chessground/assets/chessground.brown.css';\\n\\timport 'chessground/assets/chessground.cburnett.css';\\n\\n\\timport { Chess, SQUARES } from 'chess.js';\\n\\n\\texport default {\\n\\t\\tname: \\\"board\\\",\\n\\n\\t\\tprops: ['fen'],\\n\\n\\t\\tdata() {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tgame: null,\\n\\t\\t\\t\\tboard: null,\\n\\t\\t\\t\\tobserver: null,\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tcreated () {\\n\\t\\t\\tthis.game = new Chess();\\n\\t\\t\\tthis.game.load(\\\"\\\");\\n\\t\\t},\\n\\n\\t\\tmounted() {\\n\\n\\t\\t\\tthis.board = Chessground(this.$refs.board, {});\\n\\t\\t\\t\\n\\t\\t\\t//this.board.set(config);\\n\\t\\t\\t\\n\\t\\t\\twindow.addEventListener('resize', this.onResize);\\n\\t\\t\\t//this.observer = new ResizeObserver(() => this.onResize(), this.$refs.boardwrapper);\\n\\n\\t\\t\\tthis.onResize();\\n\\n\\t\\t\\tthis.loadPosition();\\n\\n\\t\\t},\\n\\n\\t\\tunmounted() {\\n\\t\\t\\twindow.removeEventListener('resize', this.onResize);\\n\\t\\t},\\n\\n\\t\\twatch: {\\n\\t\\t\\t fen: function (newFen) {\\n\\t\\t\\t\\tthis.fen = newFen\\n\\t\\t\\t\\tthis.loadPosition()\\n\\t\\t\\t},\\n\\t\\t},\\n\\n\\t\\tmethods: {\\n\\t\\t\\t// https://github.com/vitogit/vue-chessboard/blob/master/src/components/chessboard/index.vue\\n\\t\\t\\tpossibleMoves () {\\n\\t\\t\\t\\tconst dests = {}\\n\\t\\t\\t\\tSQUARES.forEach(s => {\\n\\t\\t\\t\\t\\tconst ms = this.game.moves({square: s, verbose: true})\\n\\t\\t\\t\\t\\tif (ms.length) dests[s] = ms.map(m => m.to)\\n\\t\\t\\t\\t})\\n\\t\\t\\t\\treturn dests\\n\\t\\t\\t},\\n\\n\\t\\t\\ttoColor () {\\n\\t\\t\\t\\treturn (this.game.turn() === 'w') ? 'white' : 'black'\\n\\t\\t\\t},\\n\\n\\t\\t\\tonMoved() {\\n\\t\\t\\t\\treturn (orig, dest, metadata) => {\\n\\t\\t\\t\\t\\tthis.game.move({from: orig, to: dest})\\n\\t\\t\\t\\t\\tthis.board.set({\\n\\t\\t\\t\\t\\t\\tfen: this.game.fen(),\\n\\t\\t\\t\\t\\t\\tturnColor: this.toColor(),\\n\\t\\t\\t\\t\\t\\tmovable: {\\n\\t\\t\\t\\t\\t\\t\\tcolor: this.toColor(),\\n\\t\\t\\t\\t\\t\\t\\t//dests: this.possibleMoves(),\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t})\\n\\n\\t\\t\\t\\t\\tthis.$emit('onMove', {history: this.game.history(), fen: this.game.fen()});\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\t// load positional data for both Chess.js and Chessground\\n\\t\\t\\tloadPosition() {\\n\\t\\t\\t\\tthis.game.load(this.fen);\\n\\t\\t\\t\\t this.board = Chessground(this.$refs.board, {\\n\\t\\t\\t\\t\\tfen: this.game.fen(),\\n\\t\\t\\t\\t\\tturnColor: this.toColor(),\\n\\t\\t\\t\\t\\tmovable: {\\n\\t\\t\\t\\t\\t\\tcolor: this.toColor(),\\n\\t\\t\\t\\t\\t\\tfree: true,\\n\\t\\t\\t\\t\\t\\t//dests: this.possibleMoves(),\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\torientation: 'white',\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tthis.board.set({\\n\\t\\t\\t\\t\\tmovable: { events: { after: this.onMoved() } },\\n\\t\\t\\t\\t})\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetState(state) {\\n\\t\\t\\t\\tconsole.log(state)\\n\\t\\t\\t\\tthis.board.set({...state});\\n\\t\\t\\t},\\n\\n\\t\\t\\tonResize() {\\n\\t\\t\\t\\tthis.board.redrawAll();\\n\\t\\t\\t},\\n\\n\\t\\t\\thistory() {\\n\\t\\t\\t\\treturn this.game.history();\\n\\t\\t\\t},\\n\\n\\t\\t}\\n\\t};\\n</script>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"board\",staticClass:\"board\"})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=script&lang=js&\"","<template>\n\n\t\t<div ref=\"board\" class=\"board\">\n\n\t\t</div>\n\n</template>\n\n<style>\n\n\t.board {\n\t\twidth:100%;\n\t\theight: 100%;\n\t\tpadding-top:100%; /* 1:1 aspect */\n\t}\n\n\t.cg-wrap {\n\t\tborder-radius: 3px;\n\t}\n\n</style>\n\n<script>\n\n\timport {chessboard} from 'vue-chessboard';\n\timport {Chessground} from 'chessground';\n\t//import 'vue-chessboard/dist/vue-chessboard.css';\n\n\timport 'chessground/assets/chessground.base.css';\n\timport 'chessground/assets/chessground.brown.css';\n\timport 'chessground/assets/chessground.cburnett.css';\n\n\timport { Chess, SQUARES } from 'chess.js';\n\n\texport default {\n\t\tname: \"board\",\n\n\t\tprops: ['fen'],\n\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tgame: null,\n\t\t\t\tboard: null,\n\t\t\t\tobserver: null,\n\t\t\t}\n\t\t},\n\n\t\tcreated () {\n\t\t\tthis.game = new Chess();\n\t\t\tthis.game.load(\"\");\n\t\t},\n\n\t\tmounted() {\n\n\t\t\tthis.board = Chessground(this.$refs.board, {});\n\t\t\t\n\t\t\t//this.board.set(config);\n\t\t\t\n\t\t\twindow.addEventListener('resize', this.onResize);\n\t\t\t//this.observer = new ResizeObserver(() => this.onResize(), this.$refs.boardwrapper);\n\n\t\t\tthis.onResize();\n\n\t\t\tthis.loadPosition();\n\n\t\t},\n\n\t\tunmounted() {\n\t\t\twindow.removeEventListener('resize', this.onResize);\n\t\t},\n\n\t\twatch: {\n\t\t\t fen: function (newFen) {\n\t\t\t\tthis.fen = newFen\n\t\t\t\tthis.loadPosition()\n\t\t\t},\n\t\t},\n\n\t\tmethods: {\n\t\t\t// https://github.com/vitogit/vue-chessboard/blob/master/src/components/chessboard/index.vue\n\t\t\tpossibleMoves () {\n\t\t\t\tconst dests = {}\n\t\t\t\tSQUARES.forEach(s => {\n\t\t\t\t\tconst ms = this.game.moves({square: s, verbose: true})\n\t\t\t\t\tif (ms.length) dests[s] = ms.map(m => m.to)\n\t\t\t\t})\n\t\t\t\treturn dests\n\t\t\t},\n\n\t\t\ttoColor () {\n\t\t\t\treturn (this.game.turn() === 'w') ? 'white' : 'black'\n\t\t\t},\n\n\t\t\tonMoved() {\n\t\t\t\treturn (orig, dest, metadata) => {\n\t\t\t\t\tthis.game.move({from: orig, to: dest})\n\t\t\t\t\tthis.board.set({\n\t\t\t\t\t\tfen: this.game.fen(),\n\t\t\t\t\t\tturnColor: this.toColor(),\n\t\t\t\t\t\tmovable: {\n\t\t\t\t\t\t\tcolor: this.toColor(),\n\t\t\t\t\t\t\t//dests: this.possibleMoves(),\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.$emit('onMove', {history: this.game.history(), fen: this.game.fen()});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// load positional data for both Chess.js and Chessground\n\t\t\tloadPosition() {\n\t\t\t\tthis.game.load(this.fen);\n\t\t\t\t this.board = Chessground(this.$refs.board, {\n\t\t\t\t\tfen: this.game.fen(),\n\t\t\t\t\tturnColor: this.toColor(),\n\t\t\t\t\tmovable: {\n\t\t\t\t\t\tcolor: this.toColor(),\n\t\t\t\t\t\tfree: true,\n\t\t\t\t\t\t//dests: this.possibleMoves(),\n\t\t\t\t\t},\n\t\t\t\t\torientation: 'white',\n\t\t\t\t});\n\n\t\t\t\tthis.board.set({\n\t\t\t\t\tmovable: { events: { after: this.onMoved() } },\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tsetState(state) {\n\t\t\t\tconsole.log(state)\n\t\t\t\tthis.board.set({...state});\n\t\t\t},\n\n\t\t\tonResize() {\n\t\t\t\tthis.board.redrawAll();\n\t\t\t},\n\n\t\t\thistory() {\n\t\t\t\treturn this.game.history();\n\t\t\t},\n\n\t\t}\n\t};\n</script>\n","import { render, staticRenderFns } from \"./board.vue?vue&type=template&id=22c9e52e&\"\nimport script from \"./board.vue?vue&type=script&lang=js&\"\nexport * from \"./board.vue?vue&type=script&lang=js&\"\nimport style0 from \"./board.vue?vue&type=style&index=0&id=22c9e52e&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}