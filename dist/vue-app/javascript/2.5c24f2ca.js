(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{36:function(t,n,e){var s=e(48);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);(0,e(4).default)("b3913c46",s,!0,{})},47:function(t,n,e){"use strict";e(36)},48:function(t,n,e){"use strict";e.r(n);var s=e(2),o=e.n(s)()(!0);o.push([t.i,"\n.board {\n\twidth:100%;\n\theight: 100%;\n\tpadding-top:100%; /* 1:1 aspect */\n}\n.cg-wrap {\n\tborder-radius: 3px;\n}\n\n","",{version:3,sources:["webpack://src/vue-app/components/board.vue"],names:[],mappings:";AAkJA;CACA,UAAA;CACA,YAAA;CACA,gBAAA,EAAA,eAAA;AACA;AAEA;CACA,kBAAA;AACA",sourcesContent:["<template>\n\n\t\t<div ref=\"board\" class=\"board\">\n\n\t\t</div>\n\n</template>\n\n<style>\n\n\t.board {\n\t\twidth:100%;\n\t\theight: 100%;\n\t\tpadding-top:100%; /* 1:1 aspect */\n\t}\n\n\t.cg-wrap {\n\t\tborder-radius: 3px;\n\t}\n\n</style>\n\n<script>\n\n\timport {chessboard} from 'vue-chessboard';\n\timport {Chessground} from 'chessground';\n\t//import 'vue-chessboard/dist/vue-chessboard.css';\n\n\timport 'chessground/assets/chessground.base.css';\n\timport 'chessground/assets/chessground.brown.css';\n\timport 'chessground/assets/chessground.cburnett.css';\n\n\timport { Chess, SQUARES } from 'chess.js';\n\n\texport default {\n\t\tname: \"board\",\n\n\t\tprops: ['fen'],\n\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tgame: null,\n\t\t\t\tboard: null,\n\t\t\t\tobserver: null,\n\t\t\t}\n\t\t},\n\n\t\tcreated () {\n\t\t\tthis.game = new Chess();\n\t\t\tthis.game.load(\"\");\n\t\t},\n\n\t\tmounted() {\n\n\t\t\tthis.board = Chessground(this.$refs.board, {});\n\t\t\t\n\t\t\t//this.board.set(config);\n\t\t\t\n\t\t\twindow.addEventListener('resize', this.onResize);\n\t\t\t//this.observer = new ResizeObserver(() => this.onResize(), this.$refs.boardwrapper);\n\n\t\t\tthis.onResize();\n\n\t\t\tthis.loadPosition();\n\n\t\t},\n\n\t\tunmounted() {\n\t\t\twindow.removeEventListener('resize', this.onResize);\n\t\t},\n\n\t\twatch: {\n\t\t\t fen: function (newFen) {\n\t\t\t\tthis.fen = newFen\n\t\t\t\tthis.loadPosition()\n\t\t\t},\n\t\t},\n\n\t\tmethods: {\n\t\t\t// https://github.com/vitogit/vue-chessboard/blob/master/src/components/chessboard/index.vue\n\t\t\tpossibleMoves () {\n\t\t\t\tconst dests = {}\n\t\t\t\tSQUARES.forEach(s => {\n\t\t\t\t\tconst ms = this.game.moves({square: s, verbose: true})\n\t\t\t\t\tif (ms.length) dests[s] = ms.map(m => m.to)\n\t\t\t\t})\n\t\t\t\treturn dests\n\t\t\t},\n\n\t\t\ttoColor () {\n\t\t\t\treturn (this.game.turn() === 'w') ? 'white' : 'black'\n\t\t\t},\n\n\t\t\tonMoved() {\n\t\t\t\treturn (orig, dest, metadata) => {\n\t\t\t\t\tthis.game.move({from: orig, to: dest})\n\t\t\t\t\tthis.board.set({\n\t\t\t\t\t\tfen: this.game.fen(),\n\t\t\t\t\t\tturnColor: this.toColor(),\n\t\t\t\t\t\tmovable: {\n\t\t\t\t\t\t\tcolor: this.toColor(),\n\t\t\t\t\t\t\t//dests: this.possibleMoves(),\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.$emit('onMove', {history: this.game.history(), fen: this.game.fen()});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// load positional data for both Chess.js and Chessground\n\t\t\tloadPosition() {\n\t\t\t\tthis.game.load(this.fen);\n\t\t\t\t this.board = Chessground(this.$refs.board, {\n\t\t\t\t\tfen: this.game.fen(),\n\t\t\t\t\tturnColor: this.toColor(),\n\t\t\t\t\tmovable: {\n\t\t\t\t\t\tcolor: this.toColor(),\n\t\t\t\t\t\tfree: true,\n\t\t\t\t\t\t//dests: this.possibleMoves(),\n\t\t\t\t\t},\n\t\t\t\t\torientation: 'white',\n\t\t\t\t});\n\n\t\t\t\tthis.board.set({\n\t\t\t\t\tmovable: { events: { after: this.onMoved() } },\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tsetState(state) {\n\t\t\t\tconsole.log(state)\n\t\t\t\tthis.board.set({...state});\n\t\t\t},\n\n\t\t\tonResize() {\n\t\t\t\tthis.board.redrawAll();\n\t\t\t},\n\n\t\t\thistory() {\n\t\t\t\treturn this.game.history();\n\t\t\t},\n\n\t\t}\n\t};\n<\/script>\n"],sourceRoot:""}]),n.default=o},50:function(t,n,e){"use strict";e.r(n);e(37);var s=e(49),o=(e(40),e(42),e(44),e(46)),r={name:"board",props:["fen"],data:()=>({game:null,board:null,observer:null}),created(){this.game=new o.Chess,this.game.load("")},mounted(){this.board=Object(s.a)(this.$refs.board,{}),window.addEventListener("resize",this.onResize),this.onResize(),this.loadPosition()},unmounted(){window.removeEventListener("resize",this.onResize)},watch:{fen:function(t){this.fen=t,this.loadPosition()}},methods:{possibleMoves(){const t={};return o.SQUARES.forEach(n=>{const e=this.game.moves({square:n,verbose:!0});e.length&&(t[n]=e.map(t=>t.to))}),t},toColor(){return"w"===this.game.turn()?"white":"black"},onMoved(){return(t,n,e)=>{this.game.move({from:t,to:n}),this.board.set({fen:this.game.fen(),turnColor:this.toColor(),movable:{color:this.toColor()}}),this.$emit("onMove",{history:this.game.history(),fen:this.game.fen()})}},loadPosition(){this.game.load(this.fen),this.board=Object(s.a)(this.$refs.board,{fen:this.game.fen(),turnColor:this.toColor(),movable:{color:this.toColor(),free:!0},orientation:"white"}),this.board.set({movable:{events:{after:this.onMoved()}}})},setState(t){console.log(t),this.board.set({...t})},onResize(){this.board.redrawAll()},history(){return this.game.history()}}},i=(e(47),e(9)),a=Object(i.a)(r,(function(){return(0,this._self._c)("div",{ref:"board",staticClass:"board"})}),[],!1,null,null,null);n.default=a.exports}}]);
//# sourceMappingURL=2.5c24f2ca.js.map